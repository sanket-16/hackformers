// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  email                String   @unique
  name                 String?
  password             String
  participatedEventIds String[] @db.ObjectId
  createdEventIds      String[] @db.ObjectId
  participatedEvents   Event[]  @relation(fields: [participatedEventIds], references: [id], name: "participants")
  createdEvents        Event[]  @relation(fields: [createdEventIds], references: [id])
}

model Organizer {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String        @unique
  password       String
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?       @db.ObjectId
}

model Organization {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  description String
  name        String
  leaderId    String      @unique @db.ObjectId
  organizers  Organizer[]
  events      Event[]
  images String[]
}

model Event {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  location    String
  description String
  date        DateTime
  images      String[]

  participantsIds String[]     @db.ObjectId
  participants    User[]       @relation(fields: [participantsIds], references: [id], name: "participants")
  userIds         String[]     @db.ObjectId
  users           User[]       @relation(fields: [userIds], references: [id])
  organization    Organization @relation(fields: [organizationId], references: [id])
  organizationId  String        @db.ObjectId
  status          status       @default(PENDING)
}

enum status {
  ACCEPT
  REJECT
  PENDING
}
